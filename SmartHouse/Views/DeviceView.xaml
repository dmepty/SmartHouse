<Window x:Class="SmartHouse.DeviceView" mc:Ignorable="d"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:viewModels="clr-namespace:SmartHouse.ViewModels"
        d:DataContext="{d:DesignInstance viewModels:DeviceViewModel}"

        Title="Устройства" Height="650" Width="800" WindowStartupLocation="CenterScreen" >
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Verdana"/>
            <Setter Property="Margin" Value="5"/>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="150" />
            <ColumnDefinition Width="auto"/>
            <ColumnDefinition Width="2*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="1.5*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="0.2*"/>
        </Grid.RowDefinitions>

        <!--Список устройств-->
        <ListBox Grid.Column="0" Grid.RowSpan="3" ItemsSource="{Binding Devices}"
                 SelectedItem="{Binding SelectedDevice}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Margin="5">
                        <TextBlock FontSize="17" Text="{Binding CodeDevice}"/>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

            <ListBox.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Редактировать" Command="{Binding EditCommand}"/>
                    <MenuItem Header="Удалить" Command="{Binding DeleteCommand}"/>
                </ContextMenu>
            </ListBox.ContextMenu>
        </ListBox>

        <GridSplitter Grid.Column="1" Grid.Row="0" Grid.RowSpan="4" ShowsPreview="False" Width="3" HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="White"/>

        <!--Описание устройств-->
        <StackPanel Grid.Row="0" Grid.Column="2">

            <TextBlock FontSize="15" Foreground="#2195f2" Text="Информация об устройстве:" />

            <TextBlock Text="Код устройства:" />
            <TextBox Text="{Binding SelectedDevice.CodeDevice, UpdateSourceTrigger=PropertyChanged}">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="Margin" Value="0,0,3,0"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDevice.IsEdit}" Value="True">
                                <Setter Property="IsReadOnly" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>


            <TextBlock Text="Шаблон:" />
            <TextBox Text="{Binding SelectedDevice.TemplateDeviceName, UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="Margin" Value="0,0,3,0"/>
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDevice.IsNew}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>

            <ComboBox ItemsSource="{Binding TemplateDevices}" SelectedItem="{Binding SelectedDevice.TemplateDevice}">
                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDevice.IsNew}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding Name}"/>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
            
            
            <TextBlock Text="Прошивка:" />
            <ComboBox ItemsSource="{Binding TemplatesFirmwares}" SelectedItem="{Binding SelectedDevice.TemplatesFirmwares}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <Run Text="{Binding Name}"/>
                            <Run Text="{Binding Version}"/>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>

                <ComboBox.Style>
                    <Style TargetType="{x:Type ComboBox}">
                        <Setter Property="IsEnabled" Value="False"/>
                        <Setter Property="Margin" Value="0,0,3,0"/>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDevice.IsEdit}" Value="True">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ComboBox.Style>
            </ComboBox>
            
            
            <TextBlock Text="Описание:" />
            <TextBox Height="100" Text="{Binding SelectedDevice.Description, UpdateSourceTrigger=PropertyChanged}" TextWrapping="Wrap">
                <TextBox.Style>
                    <Style TargetType="{x:Type TextBox}">
                        <Setter Property="IsReadOnly" Value="True"/>
                        <Setter Property="Margin" Value="0,0,3,0"/>
                        
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SelectedDevice.IsEdit}" Value="True">
                                <Setter Property="IsReadOnly" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBox.Style>
            </TextBox>
        </StackPanel>

        <GridSplitter Grid.Column="2" Grid.Row="1"  ShowsPreview="False" Height="2" VerticalAlignment="Center" HorizontalAlignment="Stretch" Background="LightGray"/>

        <!--Датчики-->
        <DockPanel Grid.Column="2" Grid.Row="2">
            <TextBlock DockPanel.Dock="Top" FontSize="15" Foreground="#2195f2" Text="Датчики:"/>

            <DataGrid ItemsSource="{Binding SelectedDevice.SensorsOfDevices}" AutoGenerateColumns="False" IsReadOnly="True">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Название" Binding="{Binding NameSensor}" Width="100"/>
                    <DataGridTextColumn Header="Описание" Binding="{Binding Description}" Width="*"/>
                </DataGrid.Columns>
            </DataGrid> 
        </DockPanel>

        <Button Width="100" Height="20" Grid.Row="3" Grid.Column="0" Command="{Binding AddDevice}" Content="Добавить"/>

        <Button Width="100" Height="20" Grid.Row="3" Grid.Column="2" Command="{Binding ChangeCommand}" Content="Сохранить">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Setter Property="IsEnabled" Value="False"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding SelectedDevice.IsEdit}" Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>
    </Grid>
</Window>
